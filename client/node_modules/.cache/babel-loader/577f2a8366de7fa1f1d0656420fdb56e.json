{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  items: [],\n  isLoading: false,\n  error: ''\n};\nexport const todoReducer = createSlice({\n  name: 'todo',\n  initialState,\n  reducers: {\n    removePost: (state, action) => {}\n  },\n  extraReducers: builder => {}\n});\nexport const {\n  removePost\n} = todoReducer.actions;\nexport default todoReducer.reducer;","map":{"version":3,"names":["createSlice","initialState","items","isLoading","error","todoReducer","name","reducers","removePost","state","action","extraReducers","builder","actions","reducer"],"sources":["/Users/mac/WebstormProjects/rtk-todo/src/store/dacks/toDoReducer/index.ts"],"sourcesContent":["import {createSlice, PayloadAction} from \"@reduxjs/toolkit\";\n\nexport type Items = {\n    id: number,\n    title: string,\n    isCompleted: false\n}\n\ntype InitialState = {\n    items: Items[],\n    isLoading: boolean,\n    error: string\n}\n\nconst initialState: InitialState = {\n    items: [],\n    isLoading: false,\n    error: ''\n}\n\nexport const todoReducer = createSlice({\n    name: 'todo',\n    initialState,\n    reducers: {\n        removePost: (state, action: PayloadAction<number>) => {\n\n        }\n    },\n    extraReducers: builder => {\n\n    }\n})\n\nexport const {removePost} = todoReducer.actions\n\n\nexport default todoReducer.reducer"],"mappings":"AAAA,SAAQA,WAAR,QAAyC,kBAAzC;AAcA,MAAMC,YAA0B,GAAG;EAC/BC,KAAK,EAAE,EADwB;EAE/BC,SAAS,EAAE,KAFoB;EAG/BC,KAAK,EAAE;AAHwB,CAAnC;AAMA,OAAO,MAAMC,WAAW,GAAGL,WAAW,CAAC;EACnCM,IAAI,EAAE,MAD6B;EAEnCL,YAFmC;EAGnCM,QAAQ,EAAE;IACNC,UAAU,EAAE,CAACC,KAAD,EAAQC,MAAR,KAA0C,CAErD;EAHK,CAHyB;EAQnCC,aAAa,EAAEC,OAAO,IAAI,CAEzB;AAVkC,CAAD,CAA/B;AAaP,OAAO,MAAM;EAACJ;AAAD,IAAeH,WAAW,CAACQ,OAAjC;AAGP,eAAeR,WAAW,CAACS,OAA3B"},"metadata":{},"sourceType":"module"}