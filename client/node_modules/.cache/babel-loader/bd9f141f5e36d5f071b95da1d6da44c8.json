{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport { api } from \"../../../api\";\nconst initialState = {\n  items: [],\n  isLoading: false,\n  error: ''\n};\nexport const todoReducer = createSlice({\n  name: 'todo',\n  initialState,\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(fetchTodos.pending, state => {\n      state.isLoading = true;\n    });\n    builder.addCase(fetchTodos.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.error = \"\";\n      state.items = action.payload;\n    });\n  }\n});\nexport const fetchTodos = createAsyncThunk('todos/fetchTodos', async count => {\n  return await api.fetchTodos(3);\n});\nexport default todoReducer.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","api","initialState","items","isLoading","error","todoReducer","name","reducers","extraReducers","builder","addCase","fetchTodos","pending","state","fulfilled","action","payload","count","reducer"],"sources":["/Users/mac/WebstormProjects/rtk-todo/client/src/store/dacks/toDoReducer/index.ts"],"sourcesContent":["import {createAsyncThunk, createSlice, PayloadAction} from \"@reduxjs/toolkit\";\nimport {api} from \"../../../api\";\n\nexport interface ItoDo {\n    id: number,\n    title: string,\n    isCompleted: false\n}\n\ntype InitialState = {\n    items: ItoDo[],\n    isLoading: boolean,\n    error: string\n}\n\nconst initialState: InitialState = {\n    items: [],\n    isLoading: false,\n    error: ''\n}\n\nexport const todoReducer = createSlice({\n    name: 'todo',\n    initialState,\n    reducers: {\n    },\n    extraReducers: builder => {\n        builder.addCase(fetchTodos.pending, (state) => {\n            state.isLoading = true\n        })\n        builder.addCase(fetchTodos.fulfilled, (state, action: PayloadAction<ItoDo[]>) => {\n            state.isLoading = false\n            state.error = \"\"\n            state.items = action.payload\n        })\n    }\n})\n\nexport const fetchTodos = createAsyncThunk(\n    'todos/fetchTodos',\n    async (count : number) => {\n        return await api.fetchTodos(3)\n    }\n)\n\nexport default todoReducer.reducer"],"mappings":"AAAA,SAAQA,gBAAR,EAA0BC,WAA1B,QAA2D,kBAA3D;AACA,SAAQC,GAAR,QAAkB,cAAlB;AAcA,MAAMC,YAA0B,GAAG;EAC/BC,KAAK,EAAE,EADwB;EAE/BC,SAAS,EAAE,KAFoB;EAG/BC,KAAK,EAAE;AAHwB,CAAnC;AAMA,OAAO,MAAMC,WAAW,GAAGN,WAAW,CAAC;EACnCO,IAAI,EAAE,MAD6B;EAEnCL,YAFmC;EAGnCM,QAAQ,EAAE,EAHyB;EAKnCC,aAAa,EAAEC,OAAO,IAAI;IACtBA,OAAO,CAACC,OAAR,CAAgBC,UAAU,CAACC,OAA3B,EAAqCC,KAAD,IAAW;MAC3CA,KAAK,CAACV,SAAN,GAAkB,IAAlB;IACH,CAFD;IAGAM,OAAO,CAACC,OAAR,CAAgBC,UAAU,CAACG,SAA3B,EAAsC,CAACD,KAAD,EAAQE,MAAR,KAA2C;MAC7EF,KAAK,CAACV,SAAN,GAAkB,KAAlB;MACAU,KAAK,CAACT,KAAN,GAAc,EAAd;MACAS,KAAK,CAACX,KAAN,GAAca,MAAM,CAACC,OAArB;IACH,CAJD;EAKH;AAdkC,CAAD,CAA/B;AAiBP,OAAO,MAAML,UAAU,GAAGb,gBAAgB,CACtC,kBADsC,EAEtC,MAAOmB,KAAP,IAA0B;EACtB,OAAO,MAAMjB,GAAG,CAACW,UAAJ,CAAe,CAAf,CAAb;AACH,CAJqC,CAAnC;AAOP,eAAeN,WAAW,CAACa,OAA3B"},"metadata":{},"sourceType":"module"}