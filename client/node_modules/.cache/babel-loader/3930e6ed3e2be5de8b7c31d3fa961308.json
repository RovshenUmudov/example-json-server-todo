{"ast":null,"code":"var _jsxFileName = \"/Users/mac/WebstormProjects/rtk-todo/client/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useAppDispatch, useAppSelector } from \"./hooks/redux\";\nimport { fetchTodos } from \"./store/dacks/toDoReducer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const dispatch = useAppDispatch();\n  const {\n    items,\n    isLoading,\n    error\n  } = useAppSelector(state => state.todoReducer);\n  useEffect(() => {\n    dispatch(fetchTodos(2));\n  }, [dispatch]);\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 16\n    }, this);\n  }\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: items && items.map(el => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: `${el.isCompleted && 'completed'}`,\n        children: el.title\n      }, el.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n};\n\n_s(App, \"6kePnclL1MPTIktxI84MaldECaY=\", false, function () {\n  return [useAppDispatch, useAppSelector];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useAppDispatch","useAppSelector","fetchTodos","App","dispatch","items","isLoading","error","state","todoReducer","map","el","isCompleted","title","id"],"sources":["/Users/mac/WebstormProjects/rtk-todo/client/src/App.tsx"],"sourcesContent":["import React, {FC, useEffect} from 'react';\nimport {useAppDispatch, useAppSelector} from \"./hooks/redux\";\nimport {fetchTodos} from \"./store/dacks/toDoReducer\";\n\nconst App: FC = () => {\n\n    const dispatch = useAppDispatch()\n    const {items, isLoading, error} = useAppSelector(state => state.todoReducer)\n\n    useEffect(() => {\n        dispatch(fetchTodos(2))\n    }, [dispatch])\n\n    if (isLoading) {\n        return <h2>Loading...</h2>\n    }\n\n    if (error) {\n        return <h2>{error}</h2>\n    }\n\n    return (\n        <div>\n            <ul>\n                {\n                    items && items.map(el => (\n                        <li key={el.id} className={`${el.isCompleted && 'completed'}`}>{el.title}</li>\n                    ))\n                }\n            </ul>\n        </div>\n    );\n};\n\nexport default App;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAmBC,SAAnB,QAAmC,OAAnC;AACA,SAAQC,cAAR,EAAwBC,cAAxB,QAA6C,eAA7C;AACA,SAAQC,UAAR,QAAyB,2BAAzB;;;AAEA,MAAMC,GAAO,GAAG,MAAM;EAAA;;EAElB,MAAMC,QAAQ,GAAGJ,cAAc,EAA/B;EACA,MAAM;IAACK,KAAD;IAAQC,SAAR;IAAmBC;EAAnB,IAA4BN,cAAc,CAACO,KAAK,IAAIA,KAAK,CAACC,WAAhB,CAAhD;EAEAV,SAAS,CAAC,MAAM;IACZK,QAAQ,CAACF,UAAU,CAAC,CAAD,CAAX,CAAR;EACH,CAFQ,EAEN,CAACE,QAAD,CAFM,CAAT;;EAIA,IAAIE,SAAJ,EAAe;IACX,oBAAO;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAP;EACH;;EAED,IAAIC,KAAJ,EAAW;IACP,oBAAO;MAAA,UAAKA;IAAL;MAAA;MAAA;MAAA;IAAA,QAAP;EACH;;EAED,oBACI;IAAA,uBACI;MAAA,UAEQF,KAAK,IAAIA,KAAK,CAACK,GAAN,CAAUC,EAAE,iBACjB;QAAgB,SAAS,EAAG,GAAEA,EAAE,CAACC,WAAH,IAAkB,WAAY,EAA5D;QAAA,UAAgED,EAAE,CAACE;MAAnE,GAASF,EAAE,CAACG,EAAZ;QAAA;QAAA;QAAA;MAAA,QADK;IAFjB;MAAA;MAAA;MAAA;IAAA;EADJ;IAAA;IAAA;IAAA;EAAA,QADJ;AAWH,CA5BD;;GAAMX,G;UAEeH,c,EACiBC,c;;;KAHhCE,G;AA8BN,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}